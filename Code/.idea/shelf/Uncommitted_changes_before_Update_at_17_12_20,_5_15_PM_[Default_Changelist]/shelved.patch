Index: src/sample/Gameplay.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\n\nimport javafx.animation.KeyFrame;\nimport javafx.animation.RotateTransition;\nimport javafx.animation.Timeline;\nimport javafx.application.Application;\nimport javafx.event.ActionEvent;\nimport javafx.event.EventHandler;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Group;\nimport javafx.scene.Node;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Label;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.KeyEvent;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.Pane;\nimport javafx.scene.paint.Color;\nimport javafx.scene.shape.Arc;\nimport javafx.scene.shape.Circle;\nimport javafx.scene.shape.Shape;\nimport javafx.scene.transform.Rotate;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\n\nimport java.io.IOException;\nimport java.util.LinkedList;\nimport java.util.Queue;\nimport java.util.Random;\n\nimport static javafx.application.Platform.exit;\n\npublic class Gameplay  extends Application {\n    @FXML\n    private Pane Pane\n            ;\n    @FXML\n    private Label ScoreLabel;\n    @FXML\n    public Label name;\n    @FXML\n    private ImageView Star;\n    @FXML\n    private ImageView PauseButton_img;\n    @FXML\n    private Circle ball;\n    private Group outerCircle;\n    private Group obstacleOnScreen;\n    private Obstacle obstacleOnTop;\n    private FXMLLoader loader ;\n    private Obstacle obstacleToCome;\n    private Group Obstacle;\n    private double dx;\n    private double balljump;\n    private Queue<Obstacle> obstacleQueue = new LinkedList<>();\n    private boolean isplaying = false;\n    public FXMLLoader loadTheLoader(String name) throws IOException {\n        return new FXMLLoader(getClass().getResource(name));\n    }\n    public void getNewObstacle() throws IOException {\n\n        obstacleQueue.add(obstacleOnTop);\n        obstacleOnTop = obstacleQueue.poll();\n        if(obstacleOnTop instanceof ObstacleX){\n            loader = loadTheLoader(\"ObstacleX.fxml\");\n        }\n        else if(obstacleOnTop instanceof CircularObstacle){\n            loader = loadTheLoader(\"CircularObstacle.fxml\");\n        }\n        else if(obstacleOnTop instanceof rectangularObstacle){\n            loader = loadTheLoader(\"rectangularObstacle.fxml\");\n        }\n        else{\n            loader = loadTheLoader(\"Obstacle.fxml\");\n        }\n        loader.load();\n        obstacleOnTop = loader.getController();\n        obstacleToCome = obstacleQueue.peek();\n        System.out.println(\"ObstacleOnTop new Class :  \" + obstacleOnTop.getClass().toString());\n        obstacleOnScreen = obstacleOnTop.getObstacle(ball.getFill());\n        obstacleOnScreen.setLayoutY(0);\n        Pane.getChildren().add(obstacleOnScreen);\n    }\n    public boolean checkIntersection(){\n        System.out.println(obstacleOnTop.getClass().toString());\n        return obstacleOnTop.WrongIntersection(ball);\n    }\n    public int checkStars(){\n        int val = obstacleOnTop.checkStars(ball) ;\n        System.out.println(\"stars intersected : \" + val);\n        return val;\n    }\n    public void increaseScore(int val){\n        ScoreLabel.setText(Integer.toString(Integer.parseInt(ScoreLabel.getText()) + val));\n    }\n    @FXML\n    public void initData(ActionEvent event) throws IOException {\n        isplaying = false;\n        System.out.println(\"Working??\");\n        dx = 3;\n        balljump = ball.getLayoutY();\n\n        ball.toFront();\n\n        Random random = new Random();\n        for(int i=0; i<10; i++){\n            int val = random.nextInt(99) + 1;\n            if(val%4 == 0){\n                obstacleQueue.add(new Obstacle());\n            }\n            else if(val %4 == 1){\n                obstacleQueue.add(new ObstacleX());\n            }\n            else if(val % 4 == 2){\n                obstacleQueue.add(new CircularObstacle());\n            }\n            else if(val%4 == 3){\n                obstacleQueue.add(new rectangularObstacle());\n            }\n        }\n        obstacleOnTop = obstacleQueue.poll();\n\n        if(obstacleOnTop instanceof ObstacleX){\n            loader = loadTheLoader(\"ObstacleX.fxml\");\n        }\n        else if(obstacleOnTop instanceof CircularObstacle){\n            loader = loadTheLoader(\"CircularObstacle.fxml\");\n        }\n        else if(obstacleOnTop instanceof  rectangularObstacle){\n            loader = loadTheLoader(\"rectangularObstacle.fxml\");\n        }\n        else{\n            loader = loadTheLoader(\"Obstacle.fxml\");\n        }\n        loader.load();\n        obstacleOnTop = loader.getController();\n        obstacleToCome = obstacleQueue.peek();\n        obstacleOnScreen = obstacleOnTop.getObstacle(ball.getFill());\n        if(obstacleOnScreen == null){\n            System.out.println(\"Nahi hua nahi hua\");\n            exit();\n        }\n        else{\n            System.out.println(\"AA GAYA\");\n        }\n        obstacleOnScreen.setLayoutY(0);\n        Pane.getChildren().add(obstacleOnScreen);\n        ball.toFront();\n        Pane.onKeyPressedProperty( );\n        ((Node) event.getSource()).getScene().setOnKeyPressed(new EventHandler<KeyEvent>() {\n            @Override public void handle(KeyEvent event) {\n                //System.out.println(\"Chara \"+event.getCharacter());\n//                System.out.println(\"Code\"+event.getCode());\n//                System.out.println(\"Text\"+event.getText());\n                // System.out.println(event.);\n                isplaying = true;\n                switch (event.getCode()) {\n                    case W:\n                        balljump = ball.getLayoutY()-100;\n                        //Pane.setLayoutY(Pane.getLayoutY() +2);\n                        if(dx>0)\n                            dx = -5;\n                        else\n                            dx -=3;\n                        System.out.println(\"UP\"); break;\n                    case U:\n                        System.out.println(\"UP Pressed\"); break;\n                    case D:\n                        System.out.println(\"D Pressed\"); break;\n                    case R: System.out.println(\"Right\"); break;\n                    case O:  System.out.println(\"DOWN\"); break;\n                    case L:  System.out.println(\"LEFT\"); break;\n                    default:\n                        System.out.println(\"Horha h\");\n                }\n            }\n        });\n\n        sample.Obstacle finalObstacleOnTop = obstacleOnTop;\n        Timeline timeline = new Timeline(new KeyFrame(Duration.millis(10), new EventHandler<ActionEvent>() {\n\n\n\n            @Override\n            public void handle(ActionEvent t) {\n                //move the ball\n//                outerCircle.setLayoutY(outerCircle.getLayoutY()+2);\n                if(ball.getLayoutY()<=400 )\n                    obstacleOnScreen.setLayoutY(obstacleOnScreen.getLayoutY()+1);\n                if(obstacleOnScreen.getLayoutY()>=550 || obstacleOnScreen.getLayoutY()<=200){\n                    obstacleOnScreen.setLayoutY(obstacleOnScreen.getLayoutY()+1);\n                }\n                ball.setLayoutY(ball.getLayoutY() + dx);\n                //Checking if ball touches any star\n//                if(Star.getBoundsInParent().intersects(ball.getBoundsInParent())){\n//                    System.out.println(\"Hell yeah\");\n//                    Star.setLayoutY((Star.getLayoutY()+150)%600);\n////                    ScoreLabel.setText(String.valueOf(Integer.parseInt(ScoreLabel.getText())+1));\n//                }\n\n                increaseScore(checkStars());\n                obstacleOnTop.checkColorChanger(ball);\n                if(checkIntersection()){\n                    System.out.println(\"Intersection detect Ho gaya\");\n                    isplaying = false;\n                    exit();\n                }\n\n                //Detecting collision with obstacle\n//                if(obstacleOnScreen.getBoundsInParent().intersects(ball.getBoundsInParent())){\n//                    System.out.println(\"Here \");\n//                    if(obstacleOnTop.intersectsWrongColour(ball)){\n//                        System.out.println(\"Game Over Ho Gaya\");\n//                        isplaying = false;\n//                    }\n//                }\n\n\n                if(obstacleOnScreen.getLayoutY() > 1024) {\n                    try {\n                        //obstacleOnScreen = obstacleToCome;\n                        getNewObstacle();\n                        ball.toFront();\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                //If the ball reaches the left or right border make the step negative\n                //If the ball reaches the bottom or top border make the step negative\n                if(Math.abs(dx)<1){\n                    dx = 1;\n                }\n                //Add damping effect to the ball\n                if(dx>0){\n                    dx += 0.03*dx;\n                }\n                else{\n                    dx -= (0.03)*dx;\n                }\n\n            }\n        }));\n\n\n\n        timeline.setCycleCount(Timeline.INDEFINITE);\n        timeline.play();\n    }\n    @FXML\n    public void flippause(MouseEvent event) throws  IOException {\n        flipIcon(PauseButton_img);\n    }\n    private void flipIcon(ImageView Icon){\n        RotateTransition rotate = new RotateTransition();\n        rotate.setAxis(Rotate.Z_AXIS);\n        rotate.setFromAngle(0);\n        rotate.setToAngle(360);\n        rotate.setCycleCount(1);\n        rotate.setDuration(Duration.millis(1000));\n        rotate.setNode((Node)Icon);\n        rotate.play();\n    }\n\n    @FXML\n    void jump (MouseEvent event) throws  IOException {\n        ball.setCenterY(ball.getCenterY()-100);\n        System.out.println(\"Jump\");\n    }\n\n    @FXML\n    void openPauseMenu(MouseEvent event) throws IOException {\n        int color, obstacle, x, y,score;\n        if(ball.getStroke()== Color.RED){\n            color = 1;\n        }\n        else if(ball.getStroke() == Color.BLUE){\n            color =2;\n        }\n        else if(ball.getStroke() == Color.GREEN){\n            color = 3;\n        }\n        else{\n            // Yellow\n            color = 4;\n        }\n        //default case for trying now.....\n        obstacle =1;\n        //Uncomment following if statements to make it working\n        if(obstacleOnTop instanceof ObstacleX){\n            obstacle = 1;\n        }\n        else if(obstacleOnTop instanceof CircularObstacle){\n            obstacle = 2;\n        }\n        else{\n            obstacle = 3;\n        }\n        Loader pausegame = new Loader(Integer.parseInt(ScoreLabel.getText()),color,obstacle,ball.getCenterX(),ball.getCenterY());\n        pausegame.writeOut();\n        System.out.println(\"Writeout completed\");\n        Parent Pause = FXMLLoader.load(getClass().getResource(\"pauseMenu.fxml\"));\n        Scene player = new Scene(Pause);\n\n\n        Stage window = (Stage) ((Node) event.getSource()).getScene().getWindow();\n        window.setScene(player);\n        window.show();\n    }\n\n\n\n    @Override\n    public void start(Stage PrimaryStage) throws Exception {\n        Parent StartMenu = FXMLLoader.load(getClass().getResource(\"Gameplay.fxml\"));\n        PrimaryStage.setTitle(\"Color Switch\");\n        final Scene scene = new Scene(StartMenu);\n        scene.setOnKeyPressed(new EventHandler<KeyEvent>() {\n            @Override\n            public void handle(KeyEvent event) {\n                System.out.println(\"Key press detected...\");\n            }\n        });\n        //Gameplay game = new Gameplay();\n\n        PrimaryStage.setScene(scene);\n        //initData();\n\n        PrimaryStage.show();\n        //initData();\n\n    }\n\n\n\n    //    scene.setOnKeyPressed(new EventHandler<KeyEvent>() {\n//        @Override\n//        public void handle(KeyEvent event) {\n//            switch (event.getCode()) {\n//                case UP:    goNorth = true; break;\n//                case DOWN:  goSouth = true; break;\n//                case LEFT:  goWest  = true; break;\n//                case RIGHT: goEast  = true; break;\n//                case SHIFT: running = true; break;\n//            }\n//        }\n//    });\n    public void loadfromPause(Loader load, ActionEvent event) throws IOException{\n        isplaying = false;\n        System.out.println(\"Loading from the pause Menu\");\n        ScoreLabel.setText(String.valueOf(load.score));\n        ScoreLabel.toFront();\n        dx = 3;\n        balljump = ball.getLayoutY();\n        ball.toFront();\n\n        int val = load.obstacle;\n        Random random = new Random();\n        for(int i =0; i<10;i++){\n            if(val%3 == 0){\n                obstacleQueue.add(new Obstacle());\n            }\n            else if(val %3 == 1){\n                obstacleQueue.add(new ObstacleX());\n            }\n            else if(val % 3 == 2){\n                obstacleQueue.add(new CircularObstacle());\n            }\n            val = random.nextInt(99)+1;\n        }\n        obstacleOnTop = obstacleQueue.poll();\n\n        if(obstacleOnTop instanceof ObstacleX){\n            loader = loadTheLoader(\"ObstacleX.fxml\");\n        }\n        else if(obstacleOnTop instanceof CircularObstacle){\n            loader = loadTheLoader(\"CircularObstacle.fxml\");\n        }\n        else{\n            loader = loadTheLoader(\"Obstacle.fxml\");\n        }\n        loader.load();\n        obstacleOnTop = loader.getController();\n        obstacleToCome = obstacleQueue.peek();\n        obstacleOnScreen = obstacleOnTop.getObstacle(ball.getFill());\n        if(obstacleOnScreen == null){\n            System.out.println(\"Nahi hua nahi hua\");\n            exit();\n        }\n        else{\n            System.out.println(\"AA GAYA\");\n        }\n        obstacleOnScreen.setLayoutY(0);\n        Pane.getChildren().add(obstacleOnScreen);\n        ball.toFront();\n        Pane.onKeyPressedProperty( );\n        ((Node) event.getSource()).getScene().setOnKeyPressed(new EventHandler<KeyEvent>() {\n            @Override public void handle(KeyEvent event) {\n                //System.out.println(\"Chara \"+event.getCharacter());\n//                System.out.println(\"Code\"+event.getCode());\n//                System.out.println(\"Text\"+event.getText());\n                // System.out.println(event.);\n                isplaying = true;\n                switch (event.getCode()) {\n                    case W:\n                        balljump = ball.getLayoutY()-100;\n                        //Pane.setLayoutY(Pane.getLayoutY() +2);\n                        if(dx>0)\n                            dx = -5;\n                        else\n                            dx -=3;\n                        System.out.println(\"UP\"); break;\n                    case U:\n                        System.out.println(\"UP Pressed\"); break;\n                    case D:\n                        System.out.println(\"D Pressed\"); break;\n                    case R: System.out.println(\"Right\"); break;\n                    case O:  System.out.println(\"DOWN\"); break;\n                    case L:  System.out.println(\"LEFT\"); break;\n                    default:\n                        System.out.println(\"Horha h\");\n                }\n            }\n        });\n\n        sample.Obstacle finalObstacleOnTop = obstacleOnTop;\n        Timeline timeline = new Timeline(new KeyFrame(Duration.millis(20), new EventHandler<ActionEvent>() {\n\n\n\n            @Override\n            public void handle(ActionEvent t) {\n                //move the ball\n//                outerCircle.setLayoutY(outerCircle.getLayoutY()+2);\n                if(ball.getLayoutY()<=400 )\n                    obstacleOnScreen.setLayoutY(obstacleOnScreen.getLayoutY()+1);\n                if(obstacleOnScreen.getLayoutY()>=550 || obstacleOnScreen.getLayoutY()<=200){\n                    obstacleOnScreen.setLayoutY(obstacleOnScreen.getLayoutY()+1);\n                }\n                ball.setLayoutY(ball.getLayoutY() + dx);\n\n\n                increaseScore(checkStars());\n                obstacleOnTop.checkColorChanger(ball);\n                if(checkIntersection()){\n                    System.out.println(\"Intersection detect Ho gaya\");\n                    isplaying = false;\n                    //exit();\n                }\n\n                if(obstacleOnScreen.getLayoutY() > 1024) {\n                    try {\n                        //obstacleOnScreen = obstacleToCome;\n                        getNewObstacle();\n                        ball.toFront();\n                    } catch (IOException e) {\n                        e.printStackTrace();\n                    }\n                }\n                //If the ball reaches the left or right border make the step negative\n                //If the ball reaches the bottom or top border make the step negative\n                if(Math.abs(dx)<1){\n                    dx = 1;\n                }\n                //Add damping effect to the ball\n                if(dx>0){\n                    dx += 0.03*dx;\n                }\n                else{\n                    dx -= (0.03)*dx;\n                }\n\n            }\n        }));\n\n\n\n        timeline.setCycleCount(Timeline.INDEFINITE);\n        timeline.play();\n\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/sample/Gameplay.java b/src/sample/Gameplay.java
--- a/src/sample/Gameplay.java	(revision 0feacdebdfb601f2816c9db40db1ed3636194563)
+++ b/src/sample/Gameplay.java	(date 1608204798581)
@@ -16,6 +16,7 @@
 import javafx.scene.image.ImageView;
 import javafx.scene.input.KeyEvent;
 import javafx.scene.input.MouseEvent;
+import javafx.scene.layout.AnchorPane;
 import javafx.scene.layout.Pane;
 import javafx.scene.paint.Color;
 import javafx.scene.shape.Arc;
@@ -95,6 +96,43 @@
     public void increaseScore(int val){
         ScoreLabel.setText(Integer.toString(Integer.parseInt(ScoreLabel.getText()) + val));
     }
+    public void GameOver()throws IOException{
+        int color, obstacle, x, y,score;
+        if(ball.getFill()== Color.RED){
+            color = 1;
+        }
+        else if(ball.getFill() == Color.BLUE){
+            color =2;
+        }
+        else if(ball.getFill() == Color.GREEN){
+            color = 3;
+        }
+        else{
+            // Yellow
+            color = 4;
+        }
+        //default case for trying now.....
+        //Uncomment following if statements to make it working
+        if(obstacleOnTop instanceof ObstacleX){
+            obstacle = 1;
+        }
+        else if(obstacleOnTop instanceof CircularObstacle){
+            obstacle = 2;
+        }
+        else{
+            obstacle = 3;
+        }
+        Loader pausegame = new Loader(Integer.parseInt(ScoreLabel.getText()),color,obstacle,ball.getCenterX(),ball.getCenterY());
+        pausegame.writeOut();
+        System.out.println("Writeout completed");
+        String score1 = ScoreLabel.getText();
+        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource("GameOver.fxml"));
+        fxmlLoader.load();
+        GameOver controller = fxmlLoader.getController();
+        controller.init(score1);
+        AnchorPane pane=fxmlLoader.load();
+        this.Pane.getChildren().setAll(pane);
+    }
     @FXML
     public void initData(ActionEvent event) throws IOException {
         isplaying = false;
@@ -205,7 +243,11 @@
                 if(checkIntersection()){
                     System.out.println("Intersection detect Ho gaya");
                     isplaying = false;
-                    exit();
+                    try {
+                        GameOver();
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
                 }
 
                 //Detecting collision with obstacle
@@ -294,6 +336,9 @@
         else if(obstacleOnTop instanceof CircularObstacle){
             obstacle = 2;
         }
+        else if(obstacleOnTop instanceof  rectangularObstacle){
+            obstacle = 4;
+        }
         else{
             obstacle = 3;
         }
@@ -377,6 +422,9 @@
         else if(obstacleOnTop instanceof CircularObstacle){
             loader = loadTheLoader("CircularObstacle.fxml");
         }
+        else if(obstacleOnTop instanceof rectangularObstacle){
+            loader = loadTheLoader("rectangularObstacle.fxml");
+        }
         else{
             loader = loadTheLoader("Obstacle.fxml");
         }
@@ -447,8 +495,12 @@
                     System.out.println("Intersection detect Ho gaya");
                     isplaying = false;
                     //exit();
+                    try {
+                        GameOver();
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
                 }
-
                 if(obstacleOnScreen.getLayoutY() > 1024) {
                     try {
                         //obstacleOnScreen = obstacleToCome;
Index: src/sample/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\n\nimport javafx.animation.PauseTransition;\nimport javafx.animation.RotateTransition;\nimport javafx.application.Application;\nimport javafx.fxml.FXMLLoader;\nimport javafx.geometry.Insets;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.scene.control.Label;\nimport javafx.scene.control.ProgressBar;\nimport javafx.scene.control.TextArea;\nimport javafx.scene.layout.Background;\nimport javafx.scene.layout.BackgroundFill;\nimport javafx.scene.layout.CornerRadii;\nimport javafx.scene.layout.StackPane;\nimport javafx.scene.media.Media;\nimport javafx.scene.media.MediaPlayer;\nimport javafx.scene.shape.Arc;\nimport javafx.scene.shape.ArcType;\nimport javafx.scene.transform.Rotate;\nimport javafx.stage.Stage;\nimport javafx.scene.Group;\nimport javafx.scene.paint.Color;\nimport javafx.scene.shape.Circle;\nimport javafx.scene.text.Font;\nimport javafx.scene.text.Text;\nimport javafx.util.Duration;\n\nimport java.io.IOException;\nimport java.util.Date;\nimport java.util.concurrent.TimeUnit;\n\npublic class Main extends Application {\n\n    public static void makeArc(Arc arc, double centerX, double centerY, double radius, double startAngle, Color color){\n        arc.setType(ArcType.ROUND);\n        arc.setCenterX(centerX);\n        arc.setCenterY(centerY);\n        arc.setRadiusX(radius);\n        arc.setRadiusY(radius);\n        arc.setStartAngle(startAngle);\n        arc.setLength(90);\n        arc.setFill(color);\n    }\n    @Override\n    public void start(Stage primaryStage) throws Exception{\n        primaryStage.setTitle(\"Color Switch\");\n\n        //Creating the color switch logo\n        Arc arc1 = new Arc();\n        Arc arc2 = new Arc();\n        Arc arc3 = new Arc();\n        Arc arc4 = new Arc();\n        makeArc(arc1, 512, 410, 100, 0, Color.RED);\n        makeArc(arc2, 512, 410, 100, 90, Color.GREEN);\n        makeArc(arc3, 512, 410, 100, 180, Color.YELLOW);\n        makeArc(arc4, 512, 410, 100, 270, Color.BLUE);\n\n        //grouping all the arcs together for the outside arcs\n        final Group outerCircle = new Group(arc1, arc2, arc3, arc4);\n\n        //loading the image using the mainPage.fxml\n        Parent MainPage = FXMLLoader.load(getClass().getResource(\"Main.fxml\"));\n        MainPage.setLayoutX(415);\n        MainPage.setLayoutY(20);\n\n        //creating the rotation aspect of the program;\n        RotateTransition rotate = new RotateTransition();\n        rotate.setAxis(Rotate.Z_AXIS);\n        rotate.setFromAngle(0);\n        rotate.setToAngle(360);\n        rotate.setCycleCount(RotateTransition.INDEFINITE);\n        rotate.setDuration(Duration.millis(1000));\n        rotate.setNode(outerCircle);\n        rotate.play();\n\n        //creating the inner circle\n        final Circle circ2 = new Circle(512, 410, 80, Color.BLACK);\n//        MediaPlayer mp = Audio.getInstance().playMusic(\"/assets/Sounds/gameOver.wav\");\n        //final group to add all the elements into\n        final Group root = new Group();\n        root.getChildren().add(outerCircle);\n        root.getChildren().add(circ2);\n        root.getChildren().add(MainPage);\n//        mp.play();\n        //creating the scene and adding the root to it\n        final Scene scene = new Scene(root,  1024, 820, Color.BLACK);\n\n        //display\n//        Audio a = Audio.getInstance();\n//        a.playMusic(\"/assets/Sounds/gameStart.wav\");\n        primaryStage.setScene(scene);\n        primaryStage.setResizable(false);\n        primaryStage.show();\n        PauseTransition delay = new PauseTransition(Duration.seconds(5));\n        delay.setOnFinished( event -> {\n            try {\n                openGame(primaryStage);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        });\n        delay.play();\n    }\n\n    public static void openGame(Stage primaryStage) throws IOException {\n        StartMenu startMenu = new StartMenu();\n        startMenu.start(primaryStage);\n    }\n    public static void main(String[] args) throws InterruptedException, IOException {\n\n        launch(args);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/sample/Main.java b/src/sample/Main.java
--- a/src/sample/Main.java	(revision 0feacdebdfb601f2816c9db40db1ed3636194563)
+++ b/src/sample/Main.java	(date 1608199551084)
@@ -78,7 +78,7 @@
 
         //creating the inner circle
         final Circle circ2 = new Circle(512, 410, 80, Color.BLACK);
-//        MediaPlayer mp = Audio.getInstance().playMusic("/assets/Sounds/gameOver.wav");
+        Audio.getInstance().playMusic("/assets/Sounds/gameStart.wav", 0, 5).play();
         //final group to add all the elements into
         final Group root = new Group();
         root.getChildren().add(outerCircle);
Index: src/sample/StartMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sample;\n\nimport javafx.animation.RotateTransition;\nimport javafx.application.Application;\nimport javafx.fxml.FXML;\nimport javafx.fxml.FXMLLoader;\nimport javafx.scene.Node;\nimport javafx.scene.Parent;\nimport javafx.scene.Scene;\nimport javafx.scene.control.Button;\nimport javafx.event.ActionEvent;\nimport javafx.scene.image.ImageView;\nimport javafx.scene.input.MouseEvent;\nimport javafx.scene.layout.AnchorPane;\nimport javafx.scene.media.Media;\nimport javafx.scene.media.MediaPlayer;\nimport javafx.scene.transform.Rotate;\nimport javafx.stage.Stage;\nimport javafx.util.Duration;\n\nimport java.io.IOException;\n\nimport static javafx.application.Application.launch;\n\npublic class StartMenu extends Application {\n    @FXML\n    private AnchorPane startMenuScreen;\n\n    @FXML\n    private ImageView newGameIcon;\n    @FXML\n    private ImageView resumeGameIcon;\n    @FXML\n    private ImageView highScoreIcon;\n    @FXML\n    private  ImageView exitIcon;\n    @FXML\n    void openGamePlay(ActionEvent event) throws IOException {\n        //Parent gamePlay = FXMLLoader.load(getClass().getResource(\"Gameplay.fxml\"));\n        //Scene scene = new Scene(gamePlay);\n\n        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"Gameplay.fxml\"));\n        AnchorPane pane=fxmlLoader.load();\n        Gameplay controller = fxmlLoader.getController();\n        controller.initData(event);\n        startMenuScreen.getChildren().setAll(pane);\n//        Gameplay Gameplay = new Gameplay();\n//        Stage newStage = new Stage();\n//        Gameplay.start(newStage);\n//    }\n//\n    }\n\n    private void flipIcon(ImageView Icon){\n        RotateTransition rotate = new RotateTransition();\n        rotate.setAxis(Rotate.Z_AXIS);\n        rotate.setFromAngle(0);\n        rotate.setToAngle(360);\n        rotate.setCycleCount(1);\n        rotate.setDuration(Duration.millis(1000));\n        rotate.setNode((Node)Icon);\n        rotate.play();\n    }\n    @FXML\n    void flipNewGameIcon (MouseEvent event) throws  IOException {\n        flipIcon(newGameIcon);\n    }\n    @FXML\n    void flipResumeGameIcon (MouseEvent event) throws  IOException {\n        flipIcon(resumeGameIcon);\n    }\n    @FXML\n    void flipHighScoreIcon (MouseEvent event) throws  IOException {\n        flipIcon(highScoreIcon);\n    }\n    @FXML\n    void flipExitIcon (MouseEvent event) throws IOException {\n        flipIcon(exitIcon);\n    }\n    @FXML\n    void exitStartMenu(ActionEvent event) throws IOException {\n    }\n    private static MediaPlayer mediaPlayer;\n    @Override\n    public void start(Stage PrimaryStage) throws IOException {\n//            Audio.getInstance().playMusic(\"/assets/Sounds/gameStart.wav\").play();\n            Parent StartMenu = FXMLLoader.load(getClass().getResource(\"StartMenu.fxml\"));\n            final Scene scene = new Scene(StartMenu);\n\n\n            PrimaryStage.setScene(scene);\n            PrimaryStage.show();\n    }\n    public static void main(String[] args){\n        launch(args);\n    }\n    @FXML\n    void LoadMenu(ActionEvent event) throws IOException{\n        FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"LoadMenu.fxml\"));\n        AnchorPane pane=fxmlLoader.load();\n        Loadmenu controller = fxmlLoader.getController();\n        controller.init(event);\n        startMenuScreen.getChildren().setAll(pane);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/sample/StartMenu.java b/src/sample/StartMenu.java
--- a/src/sample/StartMenu.java	(revision 0feacdebdfb601f2816c9db40db1ed3636194563)
+++ b/src/sample/StartMenu.java	(date 1608200181718)
@@ -60,6 +60,7 @@
         rotate.setDuration(Duration.millis(1000));
         rotate.setNode((Node)Icon);
         rotate.play();
+        Audio.getInstance().playMusic("/assets/Sounds/spinning.wav",0,1).play();
     }
     @FXML
     void flipNewGameIcon (MouseEvent event) throws  IOException {
Index: Load.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>��\u0000\u0005sr\u0000\rsample.Loader�>�\b\u000B\u001B?=\u0002\u0000\u0005I\u0000\u0005colorD\u0000\u0004corXD\u0000\u0004corYI\u0000\bobstacleI\u0000\u0005scorexp\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0012
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Load.txt b/Load.txt
--- a/Load.txt	(revision 0feacdebdfb601f2816c9db40db1ed3636194563)
+++ b/Load.txt	(date 1608203285663)
@@ -1,2 +1,2 @@
 �� sr 
-sample.Loader�>�?= I colorD corXD corYI obstacleI scorexp                         
\ No newline at end of file
+sample.Loader�>�?= I colorD corXD corYI obstacleI scorexp                         
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"BRANCH:main\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </select>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"fd4f6a46-469d-4db4-98a7-1a77ded4af05\" name=\"Default Changelist\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Code.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Code.iml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Load.txt\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Load.txt\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/assets/startingAudio.mp3\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$2.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$3.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$4.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$4.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$5.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay$5.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Code/sample/Gameplay.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/sample/Main.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Code/sample/Main.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/out/production/Code/sample/StartMenu.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/Code/sample/StartMenu.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/assets/startingAudio.mp3\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/sample/Gameplay.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/sample/Gameplay.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/sample/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/sample/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/sample/StartMenu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/sample/StartMenu.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"FxmlFile\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1kbqwbhAH7FsiAhgkS2xQoMMBBS\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\n    <property name=\"com.intellij.ide.scratch.LRUPopupBuilder$1/New Scratch File\" value=\"JAVA\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/../../javafx-sdk-11.0.2/lib/javafx.media.jar\" />\n    <property name=\"project.structure.last.edited\" value=\"Libraries\" />\n    <property name=\"project.structure.proportion\" value=\"0.15\" />\n    <property name=\"project.structure.side.proportion\" value=\"0.2\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.externalResources\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"GameList\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"sample.GameList\" />\n      <module name=\"Code\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"sample.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Gameplay\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"sample.Gameplay\" />\n      <module name=\"Code\" />\n      <option name=\"VM_PARAMETERS\" value=\"--module-path $PROJECT_DIR$/../../javafx-sdk-11.0.2/lib --add-modules=javafx.controls,javafx.fxml\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"sample.Main\" />\n      <module name=\"Code\" />\n      <option name=\"VM_PARAMETERS\" value=\"--module-path $PROJECT_DIR$/../../javafx-sdk-11.0.2/lib --add-modules=javafx.controls,javafx.media,javafx.fxml\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Obstacle\" type=\"Application\" factoryName=\"Application\" temporary=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"sample.Obstacle\" />\n      <module name=\"Code\" />\n      <option name=\"VM_PARAMETERS\" value=\"--module-path $PROJECT_DIR$/../../javafx-sdk-11.0.2/lib --add-modules=javafx.controls,javafx.fxml\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"ObstacleX\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"sample.ObstacleX\" />\n      <module name=\"Code\" />\n      <option name=\"VM_PARAMETERS\" value=\"--module-path $PROJECT_DIR$/../../javafx-sdk-11.0.2/lib --add-modules=javafx.controls,javafx.fxml\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"sample.test\" />\n      <module name=\"Code\" />\n      <option name=\"VM_PARAMETERS\" value=\"--module-path $PROJECT_DIR$/../../javafx-sdk-11.0.2/lib --add-modules=javafx.controls,javafx.fxml\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"Application.Main\" />\n      <item itemvalue=\"Application.FXBounds\" />\n      <item itemvalue=\"Application.Gameplay\" />\n      <item itemvalue=\"Application.ObstacleX\" />\n      <item itemvalue=\"Application.Obstacle\" />\n      <item itemvalue=\"Application.test\" />\n      <item itemvalue=\"Application.GameList\" />\n    </list>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.GameList\" />\n        <item itemvalue=\"Application.test\" />\n        <item itemvalue=\"Application.Gameplay\" />\n        <item itemvalue=\"Application.ObstacleX\" />\n        <item itemvalue=\"Application.Obstacle\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"fd4f6a46-469d-4db4-98a7-1a77ded4af05\" name=\"Default Changelist\" comment=\"\" />\n      <created>1605979877494</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1605979877494</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"added some changes\">\n      <created>1605980811287</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605980811287</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"transitioning from the Initial Page to the StartMenu done.\">\n      <created>1605983221117</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605983221117</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"new Game Button functionality added.\">\n      <created>1605992282595</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605992282595</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Game Icon now rotates when the mouse hovers it.\">\n      <created>1605997926898</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605997926898</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"All icons now rotates when the mouse hovers the button.\">\n      <created>1605998961276</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1605998961276</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"transition from the start page to the start Menu smoothened.\">\n      <created>1606032959166</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606032959166</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"added all the obstacles, made changes in gameplay, alag se banane iska folder..\">\n      <created>1607335600192</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1607335600192</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"commit changes\">\n      <created>1607359959564</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1607359959564</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"changes in gamePlay\">\n      <created>1607412654603</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1607412654603</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"obstacles move in a line. &#10;The collisions are detected.\">\n      <created>1607965520087</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1607965520087</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"added star collision\">\n      <created>1608125313972</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1608125313972</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"added star collision\">\n      <created>1608125345477</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1608125345477</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"added star collision\">\n      <created>1608125922238</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1608125922238</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"added star collision\">\n      <created>1608134499955</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1608134499956</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"added the colorChanger&#10;added the starCollision\">\n      <created>1608179836029</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1608179836029</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"made a minor change to the rectangular obstacle\">\n      <created>1608180207713</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1608180207713</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"17\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.History.Properties\">\n    <option name=\"COLUMN_ORDER\">\n      <list>\n        <option value=\"0\" />\n        <option value=\"2\" />\n        <option value=\"3\" />\n        <option value=\"1\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"origin/New_Branch\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"added some changes\" />\n    <MESSAGE value=\"transitioning from the Initial Page to the StartMenu done.\" />\n    <MESSAGE value=\"new Game Button functionality added.\" />\n    <MESSAGE value=\"Game Icon now rotates when the mouse hovers it.\" />\n    <MESSAGE value=\"All icons now rotates when the mouse hovers the button.\" />\n    <MESSAGE value=\"transition from the start page to the start Menu smoothened.\" />\n    <MESSAGE value=\"added all the obstacles, made changes in gameplay, alag se banane iska folder..\" />\n    <MESSAGE value=\"commit changes\" />\n    <MESSAGE value=\"changes in gamePlay\" />\n    <MESSAGE value=\"obstacles move in a line. &#10;The collisions are detected.\" />\n    <MESSAGE value=\"added star collision\" />\n    <MESSAGE value=\"added the colorChanger&#10;added the starCollision\" />\n    <MESSAGE value=\"made a minor change to the rectangular obstacle\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"made a minor change to the rectangular obstacle\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.RuntimeException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"3\" />\n        </breakpoint>\n        <breakpoint enabled=\"true\" type=\"java-exception\">\n          <properties class=\"java.lang.NullPointerException\" package=\"java.lang\" />\n          <option name=\"timeStamp\" value=\"4\" />\n        </breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/Code$Obstacle.ic\" NAME=\"Obstacle Coverage Results\" MODIFIED=\"1606803054075\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"false\">\n      <FILTER>sample.*</FILTER>\n    </SUITE>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0feacdebdfb601f2816c9db40db1ed3636194563)
+++ b/.idea/workspace.xml	(date 1608203208133)
@@ -25,11 +25,10 @@
     </select>
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="fd4f6a46-469d-4db4-98a7-1a77ded4af05" name="Default Changelist" comment="">
+    <list default="true" id="fd4f6a46-469d-4db4-98a7-1a77ded4af05" name="Default Changelist" comment="added sound ke liye class">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Code.iml" beforeDir="false" afterPath="$PROJECT_DIR$/Code.iml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Load.txt" beforeDir="false" afterPath="$PROJECT_DIR$/Load.txt" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/Code/assets/startingAudio.mp3" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$2.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$3.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$4.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Code/sample/Gameplay$4.class" afterDir="false" />
@@ -37,7 +36,6 @@
       <change beforePath="$PROJECT_DIR$/out/production/Code/sample/Gameplay.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Code/sample/Gameplay.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Code/sample/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Code/sample/Main.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/out/production/Code/sample/StartMenu.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Code/sample/StartMenu.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/assets/startingAudio.mp3" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/sample/Gameplay.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/sample/Gameplay.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/sample/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/sample/Main.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/sample/StartMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/sample/StartMenu.java" afterDir="false" />
@@ -275,7 +273,14 @@
       <option name="project" value="LOCAL" />
       <updated>1608180207713</updated>
     </task>
-    <option name="localTasksCounter" value="17" />
+    <task id="LOCAL-00017" summary="added sound ke liye class">
+      <created>1608199152686</created>
+      <option name="number" value="00017" />
+      <option name="presentableId" value="LOCAL-00017" />
+      <option name="project" value="LOCAL" />
+      <updated>1608199152686</updated>
+    </task>
+    <option name="localTasksCounter" value="18" />
     <servers />
   </component>
   <component name="Vcs.Log.History.Properties">
@@ -326,7 +331,8 @@
     <MESSAGE value="added star collision" />
     <MESSAGE value="added the colorChanger&#10;added the starCollision" />
     <MESSAGE value="made a minor change to the rectangular obstacle" />
-    <option name="LAST_COMMIT_MESSAGE" value="made a minor change to the rectangular obstacle" />
+    <MESSAGE value="added sound ke liye class" />
+    <option name="LAST_COMMIT_MESSAGE" value="added sound ke liye class" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
